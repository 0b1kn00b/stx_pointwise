{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"swf",
				"swf-version"
			],
			[
				"tink_",
				"tink_core [1.0.0-rc.2]"
			],
			[
				"Tuple",
				"Tuple5Hash"
			],
			[
				"Tuple3",
				"Tuple3Hash"
			],
			[
				"Tuple2",
				"Tuple2Hash"
			],
			[
				"hash",
				"hashCode"
			],
			[
				"Pro",
				"ProductHash"
			],
			[
				"el",
				"element"
			],
			[
				"Laz",
				"LazyListInstance"
			],
			[
				"La",
				"LazyListInstance"
			],
			[
				"obs",
				"observable"
			],
			[
				"Par",
				"PartialFunctions	class"
			],
			[
				"PF",
				"PFMethod	class"
			],
			[
				"Pa",
				"PartialFunctionType	class"
			],
			[
				"Com",
				"ComponentTestComponent	class"
			],
			[
				"_",
				"_withInput"
			],
			[
				"wi",
				"_withInput"
			],
			[
				"get",
				"_getter"
			],
			[
				"te",
				"test_case	Muster TestCase"
			],
			[
				"pre",
				"Predicate"
			],
			[
				"Loader",
				"LoaderConfig	class"
			],
			[
				"__",
				"__triggers__"
			],
			[
				"Ob",
				"Observer"
			],
			[
				"tag",
				"tag_behaviours	var"
			],
			[
				"Obje",
				"ObjectMeta	class"
			],
			[
				"beha",
				"behaviour"
			],
			[
				"o",
				"object_defs"
			],
			[
				"eni",
				"engine"
			],
			[
				"Engine",
				"PokeEngine"
			],
			[
				"com",
				"component"
			],
			[
				"Class",
				"ClassBehaviour"
			],
			[
				"e",
				"equals"
			],
			[
				"class",
				"class_name	var"
			],
			[
				"inter",
				"interests	function"
			],
			[
				"be",
				"behaviours	var"
			],
			[
				"ti",
				"__triggers__"
			],
			[
				"Obj",
				"ObjectMap"
			],
			[
				"Build",
				"Buildable"
			],
			[
				"En",
				"EntityType"
			],
			[
				"re",
				"removed"
			],
			[
				"en",
				"entities"
			],
			[
				"rem",
				"removed"
			],
			[
				"Ene",
				"EntitySystem"
			],
			[
				"TEst",
				"TestComponent"
			],
			[
				"test",
				"test_case	Muster TestCase"
			],
			[
				"Rea",
				"ReactiveComponentType"
			],
			[
				"Ent",
				"EntityType"
			],
			[
				"Arrowl",
				"ArrowletCrank"
			],
			[
				"Arrw",
				"ArrowletTest"
			],
			[
				"with",
				"withInput"
			],
			[
				"Arrow",
				"ArrowletType"
			],
			[
				"wit",
				"withInput"
			],
			[
				"ch",
				"chunk	chunk"
			],
			[
				"tuple",
				"tupled"
			],
			[
				"Arro",
				"ArrowletWindmill"
			],
			[
				"Ev",
				"EventualTest"
			],
			[
				"Con",
				"ContinuationTest"
			],
			[
				"tr",
				"true"
			],
			[
				"on",
				"onSuccess"
			],
			[
				"Me",
				"MethodTest"
			],
			[
				"t",
				"toArray"
			],
			[
				"Ha",
				"HashTest"
			],
			[
				"he",
				"height"
			],
			[
				"Comp",
				"ComponentType"
			],
			[
				"testCa",
				"TestCase"
			],
			[
				"compo",
				"component"
			],
			[
				"test_",
				"test_component"
			],
			[
				"Compo",
				"ComponentType"
			],
			[
				"comp",
				"component_map"
			],
			[
				"Entity",
				"EntityType"
			],
			[
				"DEfa",
				"DefaultEventManager"
			],
			[
				"Def",
				"DefaultEvent"
			],
			[
				"hadnler",
				"handlers"
			],
			[
				"H",
				"HandlerType"
			],
			[
				"sign",
				"signal_for"
			],
			[
				"In",
				"IntMap"
			],
			[
				"Defe",
				"DefaultEventManager"
			],
			[
				"Strin",
				"StringMap"
			],
			[
				"COmpo",
				"ComponentType"
			],
			[
				"add",
				"addChild"
			],
			[
				"String",
				"Stringifies"
			],
			[
				"STr",
				"String"
			],
			[
				"iter",
				"iterator	var"
			],
			[
				"err",
				"error_stack	var"
			],
			[
				"Stringi",
				"StringifyType"
			],
			[
				"Si",
				"SignalType	class"
			],
			[
				"Sig",
				"Signals	class"
			],
			[
				"Signal",
				"SignalType	class"
			],
			[
				"Diso",
				"Dissolvable"
			],
			[
				"Tet",
				"TestResult"
			],
			[
				"St",
				"StackItems"
			],
			[
				"sour",
				"source1"
			],
			[
				"Obser",
				"Observable"
			],
			[
				"Test",
				"TestResult"
			],
			[
				"sourc",
				"source1"
			],
			[
				"Obs",
				"Observable"
			],
			[
				"wrt",
				"writeString"
			],
			[
				"writ",
				"writeString"
			],
			[
				"r",
				"reply"
			],
			[
				"Observab",
				"Observables"
			],
			[
				"bind",
				"bindFold"
			],
			[
				"del",
				"deliver	function"
			],
			[
				"canl",
				"cancel_stack	var"
			],
			[
				"can",
				"cancel_stack	var"
			],
			[
				"Po",
				"PosInfos"
			],
			[
				"_on",
				"_onData	function"
			],
			[
				"_n",
				"_onDone"
			],
			[
				"_o",
				"_onData"
			],
			[
				"ca",
				"cancelled	var"
			],
			[
				"Ractor",
				"DefaultReactor"
			],
			[
				"Rang",
				"RangeRange"
			],
			[
				"Bin",
				"BinaryTrees"
			],
			[
				"future",
				"Future"
			],
			[
				"ob",
				"observers	var"
			],
			[
				"obser",
				"observers	var"
			],
			[
				"su",
				"subscribe"
			],
			[
				"Ma",
				"MutexArrayImpl	class"
			],
			[
				"sch",
				"scheduleTaskWait	function"
			],
			[
				"sche",
				"scheduleProcessWhen	function"
			],
			[
				"I",
				"IApply"
			],
			[
				"sc",
				"scheduleProcessImmediate	function"
			],
			[
				"Sche",
				"Scheduler"
			],
			[
				"has",
				"hasAccumulation	var"
			],
			[
				"chunk",
				"Chunk	stx"
			],
			[
				"dispo",
				"dispose"
			],
			[
				"disp",
				"disposables"
			],
			[
				"d",
				"dispose"
			],
			[
				"dis",
				"disposable"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/test/haxe/Test.hx",
			"settings":
			{
				"buffer_size": 348,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/haxe/stx/types/Sink.hx",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main/haxe/stx/Functions.hx",
			"settings":
			{
				"buffer_size": 17970,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/haxe/stx/types/Codeblock.hx",
			"settings":
			{
				"buffer_size": 52,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build.hxml",
			"settings":
			{
				"buffer_size": 100,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/test/haxe/EnvironmentTest.hx",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Haxe/Support/Hxml.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"edi",
				"Project: Edit"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"doc",
				"Goto Documentation"
			],
			[
				"pydo",
				"Python 2 Doc Search (PyDOC)"
			],
			[
				"html",
				"HTMLPrettify"
			],
			[
				"js b",
				"Javascript Beautify"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"jspr",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"prett",
				"HTMLPrettify"
			],
			[
				"pretti",
				"HTMLPrettify"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"enabl",
				"Package Control: Enable Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bros",
				"SFTP: Browse Server…"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"packagere",
				"PackageResourceViewer: Extract Package"
			],
			[
				"",
				"About"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"set",
				"Set Syntax: Hxml"
			],
			[
				"ug",
				"Package Control: Upgrade Package"
			],
			[
				"p",
				"Package Control: Enable Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"upd",
				"Package Control: Upgrade Package"
			],
			[
				"m",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"ma",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"mar",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"mark",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"en",
				"Package Control: Enable Package"
			],
			[
				"stp",
				"STProjectMaker: Create project"
			],
			[
				"proje",
				"STProjectMaker: Create project"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"o",
				"Origami: Destroy Pane Below"
			],
			[
				"or",
				"Origami: Focus on Pane Below"
			],
			[
				"orig",
				"Origami: Create Pane Below"
			],
			[
				"jslin",
				"JSLint: Run JSLint"
			],
			[
				"jsli",
				"JSLint: Run JSLint"
			],
			[
				"jsl",
				"JSLint: Run JSLint"
			],
			[
				"jslint",
				"JSLint: Run JSLint"
			],
			[
				"j",
				"JSLint: Run JSLint"
			],
			[
				"js",
				"JSLint: Show JSLint Result"
			],
			[
				"JSL",
				"JSLint: Run JSLint"
			],
			[
				"JSli",
				"JSLint: Run JSLint"
			],
			[
				"ja",
				"Set Syntax: Jade"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"x",
				"Set Syntax: XML"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"packa	",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Discover Packages"
			],
			[
				"INS",
				"Package Control: Install Package"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"ke",
				"Preferences: Key Bindings - Default"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"bin",
				"Preferences: Global Settings - User"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 640.0,
		"history":
		[
			"sys.path",
			"import pip",
			"sys.modules.keys().filter(lambda x: x == 'os.path')",
			"sys.modules.keys().filter(lambda x: return true)",
			"sys.modules.keys().filter(lambda x: return x == 'os.path')",
			"sys.modules.keys().filter(def f(x): return x == 'os.path')",
			"sys.modules.keys().filter(def f(x) return x == 'os.path')",
			"sys.modules.keys().map(",
			"sys.modules.keys()",
			"sys.modules",
			"pip",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dayz/prj/haxe/pointwise",
		"/home/dayz/prj/haxe/pointwise/build",
		"/home/dayz/prj/haxe/pointwise/hxml",
		"/home/dayz/prj/haxe/pointwise/hxml/test",
		"/home/dayz/prj/haxe/pointwise/hxml/xtra",
		"/home/dayz/prj/haxe/pointwise/src",
		"/home/dayz/prj/haxe/pointwise/src/main",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx/types",
		"/home/dayz/prj/haxe/pointwise/src/test",
		"/home/dayz/prj/haxe/pointwise/src/test/haxe"
	],
	"file_history":
	[
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx/types/Homo.hx",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx/types/Block.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/events/WeakMethodClosure.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/MimeType.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/MapElement.hx",
		"/home/dayz/prj/haxe/haxe/std/Map.hx",
		"/home/dayz/prj/haxe/haxe/std/StdTypes.hx",
		"/home/dayz/prj/haxe/haxe/std/Std.hx",
		"/home/dayz/prj/haxe/pointwise/hxml/test/as2.hxml",
		"/home/dayz/prj/haxe/haxe/std/cs/internal/HxObject.hx",
		"/home/dayz/prj/haxe/pointwise/haxelib.bat",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/Expr.hx",
		"/home/dayz/prj/haxe/haxe/std/php/Exception.hx",
		"/home/dayz/prj/haxe/haxe/std/EReg.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/BeforeUnloadEvent.hx",
		"/home/dayz/prj/haxe/pointwise/build.hxml",
		"/home/dayz/prj/haxe/haxe/std/python/lib/Set.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/Lib.hx",
		"/home/dayz/prj/haxe/haxe/std/python/lib/Exceptions.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/display/LoaderInfo.hx",
		"/home/dayz/prj/haxe/haxe/std/Lambda.hx",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx/Compose.hx",
		"/home/dayz/prj/haxe/pointwise/src/test/haxe/Test.hx",
		"/home/dayz/prj/haxe/pointwise/hxml/xtra/docs.hxml",
		"/home/dayz/prj/haxe/pointwise/src/main/haxe/stx/Functions.hx",
		"/C/world/prj/haxe/pointwise/haxelib.json",
		"/C/world/prj/haxe/pointwise/haxelib.bat",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/ifs/Action.hx",
		"/C/world/prj/haxe/haxe/std/Array.hx",
		"/C/world/prj/haxe/haxe/std/haxe/macro/Context.hx",
		"/C/world/prj/haxe/pointwise/hxml/test/neko.hxml",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/Functions.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,6/src/tink/core/Future.hx",
		"/C/world/prj/haxe/haxe/std/haxe/ds/ArraySort.hx",
		"/C/world/prj/haxe/pointwise/hxml/test/cs.hxml",
		"/C/world/prj/haxe/pointwise/[Finished in 0.4s]src/main/haxe/stx/Functions.hx",
		"/C/world/prj/haxe/pointwise/pointwise.sublime-project",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,6/src/tink/core/Error.hx",
		"/C/world/prj/haxe/haxe/std/js/html/PositionError.hx",
		"/C/world/prj/haxe/haxe/std/flash/errors/TypeError.hx",
		"/C/world/prj/haxe/haxe/std/js/Error.hx",
		"/C/world/prj/haxe/haxe/std/haxe/macro/Expr.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Error.hx",
		"/C/world/prj/haxe/haxe/std/flash/system/AuthorizedFeaturesLoader.hx",
		"/C/world/prj/haxe/haxe/std/js/html/svg/FontFaceUriElement.hx",
		"/C/world/prj/haxe/haxe/std/js/html/Float32Array.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Future.hx",
		"/C/world/prj/haxe/haxe/std/js/html/svg/ExternalResourcesRequired.hx",
		"/C/world/prj/haxe/haxe/std/js/html/EntityReference.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Outcome.hx",
		"/C/world/prj/haxe/haxe/std/cs/Out.hx",
		"/C/world/prj/haxe/haxe/std/js/html/webgl/OESElementIndexUint.hx",
		"/C/world/prj/haxe/haxe/std/haxe/remoting/HttpAsyncConnection.hx",
		"/C/world/prj/haxe/haxe/std/haxe/Http.hx",
		"/C/world/prj/haxe/haxe/std/js/html/audio/MediaElementAudioSourceNode.hx",
		"/C/world/prj/haxe/haxe/std/js/html/audio/AudioDestinationNode.hx",
		"/C/world/prj/haxe/haxe/std/flash/net/drm/AddToDeviceGroupSetting.hx",
		"/C/world/prj/haxe/haxe/std/sys/net/Address.hx",
		"/C/world/prj/haxe/haxe/std/flash/media/AudioDecoder.hx",
		"/C/world/prj/haxe/pointwise/docs/api/stx/Functions.html",
		"/C/world/prj/haxe/haxe/std/flash/display3D/Context3DProfile.hx",
		"/C/world/prj/haxe/haxe/std/python/lib/Codecs.hx",
		"/C/world/prj/haxe/haxe/std/flash/display3D/Context3D.hx",
		"/C/world/prj/haxe/haxe/std/flash/display3D/Context3DBlendFactor.hx",
		"/C/world/prj/haxe/haxe/std/flash/display3D/Context3DVertexBufferFormat.hx",
		"/C/world/prj/haxe/pointwise/docs/api/index.js",
		"/C/world/prj/haxe/haxe/std/neko/vm/Deque.hx",
		"/C/world/prj/clinic/onedrive/passwords.txt",
		"/C/world/prj/haxe/pointwise/docs/api/index.html",
		"/C/world/prj/clinic/docs/Contraseñas informáticas CCD -MT.txt",
		"/C/world/home/.ssh/known_hosts",
		"/C/world/home/.ssh/github_rsa.pub",
		"/C/world/prj/haxe/pointwise/docs/api/nav.js",
		"/C/world/prj/haxe/pointwise/build/docs.xml",
		"/C/world/prj/haxe/pointwise/hxml/test/php.hxml",
		"/C/world/stack/win/prg/sublime/v3/Data/Packages/GoSublime/USAGE.md",
		"/C/world/prj/haxe/haxe/std/haxe/macro/Type.hx",
		"/C/world/prj/haxe/pointwise/test.hxml",
		"/C/world/prj/haxe/haxe/std/js/html/svg/AnimatedRect.hx",
		"/C/world/prj/haxe/pointwise/src/xtra/haxe/Document.hx",
		"/C/world/prj/haxe/pointwise/build.hxml",
		"/C/world/prj/haxe/haxe/std/flash/display/DisplayObjectContainer.hx",
		"/C/world/prj/haxe/haxe/std/flash/display/DisplayObject.hx",
		"/C/world/prj/haxe/haxe/std/haxe/macro/ComplexTypeTools.hx",
		"/C/world/prj/haxe/haxe/std/haxe/macro/MacroType.hx",
		"/C/world/prj/haxe/haxe/std/Type.hx",
		"/C/world/prj/haxe/haxe/std/flash/text/engine/TypographicCase.hx",
		"/C/world/prj/haxe/pointwise/hxml/xtra/docs.hxml",
		"/C/world/prj/haxe/haxe/std/php/Exception.hx",
		"/C/world/prj/haxe/pointwise/[Finished in 0.1s]src/xtra/haxe/Document.hx",
		"/C/world/prj/haxe/pointwise/[Finished in 0.2s]src/xtra/haxe/Document.hx",
		"/C/world/prj/haxe/haxe/std/flash8/ContextMenu.hx",
		"/C/world/prj/haxe/haxe/std/haxe/Constraints.hx",
		"/C/world/prj/haxe/pointwise/test/java_test/src/stx/Compose_option_191__Fun.java",
		"/C/world/prj/haxe/pointwise/README.md",
		"/C/world/prj/haxe/pointwise/src/test/haxe/Test.hx",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/Compose.hx",
		"/C/world/prj/haxe/pointwise/hxml/test/as2.hxml",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/types/Thunk.hx",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/types/Codeblock.hx",
		"/C/world/prj/haxe/pointwise/src/test/haxe/TestMain.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Pair.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Callback.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/CoreApi.hx",
		"/C/world/prj/haxe/pointwise/a00e0671-23b3-47f3-87a3-425abd17bee0.dmp",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Lazy.hx",
		"/C/world/prj/haxe/pointwise/hxml/test/java.hxml",
		"/C/world/prj/haxe/pointwise/test/java_test/src/stx/Compose_second_99__Fun.java",
		"/C/world/prj/haxe/pointwise/test/java_test/src/stx/Functions1.java",
		"/C/world/prj/haxe/pointwise/hxml/test/cpp.hxml",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/README.md",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/tink_core.sublime-project",
		"/C/world/prj/haxe/pointwise/src/main/haxe/stx/Codeblock.hx",
		"/C/world/prj/haxe/stx_functional/src/test/haxe/Test.hx",
		"/C/world/prj/haxe/stx_functional/hxml/test/neko.hxml",
		"/C/world/prj/haxe/stx_functional/[Finished in 0.7s]src/main/haxe/stx/Functions.hx",
		"/C/world/prj/haxe/lib/tink_core/1,0,0-rc,2/src/tink/core/Either.hx",
		"/C/world/prj/haxe/stx_functional/src/main/haxe/stx/Codeblock.hx",
		"/C/world/prj/haxe/haxe/std/js/html/CompositionEvent.hx",
		"/C/world/prj/neko/neko/src/neko/Compile.nml",
		"/C/world/prj/neko/neko/libs/include/mysql/config-os2.h",
		"/C/world/prj/haxe/stax/build/test/cpp.hxml",
		"/C/world/prj/haxe/haxe/std/cs/internal/Function.hx",
		"/C/world/prj/haxe/haxe/std/python/lib/FuncTools.hx",
		"/C/world/prj/haxe/stax/tools/factor-js",
		"/C/world/prj/neko/neko/vm/neko.h",
		"/C/world/prj/neko/neko/src/neko.vcxproj",
		"/C/world/prj/neko/neko/src/neko.vcproj"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\world\\prj\\haxe\\pointwise",
			"/**\\n$1\\n**/",
			"C:\\world\\prj\\haxe\\pointwise\\src\\main",
			"C:\\world\\prj\\haxe\\haxe\\std",
			"C:\\world\\prj\\neko\\neko",
			"C:\\world\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\prj\\haxe\\stax",
			"C:\\world\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\test",
			"C:\\world\\prj\\haxe\\stax",
			"C:\\world\\prj\\haxe\\stax\\src\\main\\haxe\\bot",
			"C:\\world\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\bot",
			"<project>",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\build\\boot",
			"C:\\world\\stack\\prj\\haxe\\haxe\\std\\js\\html",
			"C:\\world\\stack\\prj\\haxe\\haxe\\std",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\reactive\\observable",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\async\\arrowlet",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\async",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\async\\dissolvable",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\async\\ifs",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\rx",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\test",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\arrowlet",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\fnc\\ifs",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\neko\\neko\\vm",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\test\\haxe\\rx",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\rx",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx\\rx",
			"C:\\World\\Stack\\os\\win\\src\\haxe\\std\\cs",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\funked",
			"C:\\world\\stack\\prj\\haxe\\stax\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\prj\\haxe\\stax",
			"C:\\world\\stack\\prj\\stax",
			"C:\\World\\Stack\\os\\win\\src\\haxe\\std",
			"C:\\world\\stack\\prj\\stax\\src\\main\\haxe\\stx\\rct",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\prj\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\prj\\stax\\src\\test\\haxe\\stx",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src\\main\\haxe\\hx\\ds",
			"C:\\world\\stack\\prj\\stax\\src\\main\\haxe\\hx",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src\\main\\haxe\\stx\\js",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\io\\json\\types",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src\\test\\haxe",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\reactive",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\js",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\test",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\test",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src",
			"stx.util.Objects;",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\io\\json",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Codeblock",
			"Codeblocks",
			"noop",
			"Success",
			"Failure",
			"code",
			"lazy",
			"stx",
			"haxe",
			"nav",
			"@doc(",
			"\"\\)",
			"\")",
			"\"\\)",
			"@doc(\"",
			"@doc\\([\"']\\n(.*)\\n\\s*[\"']\\)",
			"@doc\\([\"']([.\\s]*)[\"']\\)",
			"@doc\\([\"'](.*)[\"']\\)",
			"@doc(\"Pushes first parameter to the last\")",
			"@doc\\([\"'](.*)[\"']\\)",
			"@doc\\((.*)\\)",
			"doc\\((.*)\\)",
			"Outcome",
			"Prin",
			"Lazy",
			"Cell",
			"var r = null;",
			"lazy",
			"Lazy",
			"Pair",
			"\\",
			".snd()",
			"fst()",
			"fst",
			"fst()",
			"tuple2",
			"\n    ",
			"e:Fail",
			"Fail",
			"Niladic",
			"Thunk",
			"function",
			"Thunk",
			"d",
			"Thunk",
			"Either",
			"Tuple2",
			"\\",
			"Tuple2",
			"Tuples",
			"time",
			"snap",
			"appen",
			"foldL",
			"hex",
			"Void",
			"readCl",
			"nthreads",
			":Void",
			"sleep",
			"Void",
			"dissolve",
			"dissolvable",
			"Dissolvable",
			"time",
			"BotT",
			"SetT",
			"Arrowlet",
			"trace",
			"Task",
			"queue",
			"itm",
			"im",
			"time",
			"tim",
			"3",
			"_run",
			"Tuple2",
			"encode",
			"\n#",
			"UnitTestT",
			"trace",
			"Map",
			"tuple",
			"toS",
			"LazyListI",
			"flatMap",
			"flatMA",
			"getS",
			"Dyn",
			"testM",
			"Eq",
			"fields",
			"merge",
			"each",
			"InlineScheduler",
			"Dispat",
			"add",
			"optional",
			"isEquals",
			"public function",
			"assert",
			".toPartialFunction()",
			"assertEquals",
			"LispList",
			"public function",
			"assertEquals",
			"stx.ces.bot",
			"stx",
			"ces.bot.",
			"underscore",
			"under",
			"__id__",
			"__components__",
			"dynamic",
			"public",
			"T",
			"stx.bot",
			"stx.ces.bot",
			"onData",
			"      \n",
			"pure",
			"index",
			"search",
			"Object",
			"orTr",
			"orElset",
			"else"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"/**\n\\t\\t$1\n\\t**/",
			"/**\n\\t$1\n**/",
			"/**\n$1\n**/",
			"unsubscribe",
			"subscription",
			"Subscription",
			"bot",
			"stx.bot",
			"valOrUse",
			"valOrC",
			"src/boot/haxe/",
			"stx.reactive.dissolvable",
			"stx.reactive.ifs.Observable",
			"stx.reactive.observable",
			"stx.parser",
			"stx.async.Contract",
			"stx.async.Eventual",
			"hx.reactive",
			"import hx.reactive.Dispatcher",
			"stx.async.Continuation",
			"stx.async.Arrowlet",
			"stx.async.arrowlet",
			"stx.test.Assert",
			"hx.scheduler",
			"stx",
			"stx.Show",
			"stx.lambda.Compose",
			"stx.extend.Either",
			"stx.extend.Outcome",
			"stx.extend.Option",
			"stx.lambda.Functions",
			"stx.extend.Outcome",
			"stx.io.Log",
			"stx.lambda.Method",
			"stx.extend.Compare",
			"stx.extend.Tuples",
			"stx.extend.$1",
			"stx.extend",
			"stx.async",
			"stx.async.dissolvable",
			"dissolvable",
			"stx.async.ifs",
			"Dissolvable",
			"stx.async.Disolvable",
			"Disolvable",
			"disolvable",
			"using stx.UnitTest;",
			"import stx.UnitTest;",
			"TestCase",
			"Suite",
			"extends Suite",
			"stx.arrowlet",
			"Arrowlet",
			"Prelude",
			"all",
			"any",
			"each",
			"flatMapRight",
			"flatMapLeft",
			"mapRight",
			"mapLeft",
			"foldRight",
			"foldLeft",
			"ArgumentError",
			"except",
			"P1->P2->R",
			"P1->P2->R1",
			"P1->P2->P3",
			"$1->Int",
			"$1->String",
			"Reduce<$1,Bool>",
			"Reduce<$1,Int>",
			"Prelude",
			"Niladic",
			"stx.fnc.ifs",
			"stx.Either",
			"stx.Option",
			"rx",
			"import",
			"Eventual",
			"stx.ds.ifs.Collection",
			"stx.Arrow",
			"$1(u:UnitArrow):UnitArrow",
			"$1",
			"function $1(u:UnitArrow):UnitArrow",
			"tupled",
			"function $1(u:UnitArrow):UnitArrow",
			"LispListInstance",
			"LispListType",
			"LispList",
			"enclose",
			"fail(",
			"descended",
			"import stx.Compare.*;",
			"import stx.Compare;",
			"stx.Compare",
			" ",
			"import stx.Muster.*;",
			"Future",
			"stx.Arrows",
			"stx.Errors",
			"stx.rct",
			"NiladicType",
			"$1->Void",
			"Tuples$1",
			"Tuple3",
			"Tuple2",
			"import stx.Tuples;",
			"Equal.getEqualFor($1)($1,$2)",
			"Eventual",
			"Iterator",
			"ListEnumerator",
			"ListInstance",
			"foldLeft",
			"HashFunction",
			"tuple$1",
			"tuple2",
			"orElseConst",
			"Callback",
			"Option",
			"set",
			"getHashFor",
			"foldl",
			"__order__",
			"order",
			"getHashFor",
			"IntMap",
			"Hash"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/test/haxe/Test.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 348,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main/haxe/stx/types/Sink.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"open_with_edit": true,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/main/haxe/stx/Functions.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17970,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main/haxe/stx/types/Codeblock.hx",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 52,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "build.hxml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 100,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Hxml.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/test/haxe/EnvironmentTest.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"open_with_edit": true,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.GoSublime-main-output":
	{
		"height": 88.0
	},
	"output.GoSublime-output":
	{
		"height": 88.0
	},
	"output.MarGo-output":
	{
		"height": 225.0
	},
	"output.exec":
	{
		"height": 251.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 246.0
	},
	"output.haxe":
	{
		"height": 100.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 100.0
	},
	"output.jsconsole_view":
	{
		"height": 0.0
	},
	"output.jshint_view":
	{
		"height": 0.0
	},
	"output.jslint_result_view":
	{
		"height": 100.0
	},
	"output.php_builtin_server_panel":
	{
		"height": 154.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"project": "pointwise.sublime-project",
	"replace":
	{
		"height": 104.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"homo",
				"pointwise/src/main/haxe/stx/types/Homo.hx"
			],
			[
				"exp",
				"std/haxe/macro/Expr.hx"
			],
			[
				"build",
				"pointwise/build.hxml"
			],
			[
				"haxelib.",
				"pointwise\\haxelib.bat"
			],
			[
				"hax",
				"pointwise\\haxelib.json"
			],
			[
				"functions",
				"pointwise\\src\\main\\haxe\\stx\\Functions.hx"
			],
			[
				"compo",
				"pointwise\\src\\main\\haxe\\stx\\Compose.hx"
			],
			[
				"tinkerror",
				"tink\\src\\tink\\core\\Error.hx"
			],
			[
				"haxelib",
				"pointwise\\haxelib.json"
			],
			[
				"neko",
				"pointwise\\hxml\\test\\neko.hxml"
			],
			[
				"error",
				"std\\js\\Error.hx"
			],
			[
				"outcom",
				"tink\\src\\tink\\core\\Outcome.hx"
			],
			[
				"buil",
				"pointwise\\build.hxml"
			],
			[
				"haxel",
				"pointwise\\haxelib.json"
			],
			[
				"functions.hx",
				"pointwise\\src\\main\\haxe\\stx\\Functions.hx"
			],
			[
				"doc",
				"pointwise\\hxml\\xtra\\docs.hxml"
			],
			[
				"bui",
				"pointwise\\build.hxml"
			],
			[
				"test",
				"pointwise\\src\\test\\haxe\\Test.hx"
			],
			[
				"arra",
				"std\\Array.hx"
			],
			[
				"docs",
				"pointwise\\hxml\\xtra\\docs.hxml"
			],
			[
				"mactyp",
				"std\\haxe\\macro\\Type.hx"
			],
			[
				"function",
				"pointwise\\src\\main\\haxe\\stx\\Functions.hx"
			],
			[
				"macrotype",
				"std\\haxe\\macro\\Type.hx"
			],
			[
				"expr",
				"std\\haxe\\macro\\Expr.hx"
			],
			[
				"context",
				"std\\haxe\\macro\\Context.hx"
			],
			[
				"php",
				"pointwise\\hxml\\test\\php.hxml"
			],
			[
				"comp",
				"pointwise\\src\\main\\haxe\\stx\\Compose.hx"
			],
			[
				"compose",
				"pointwise\\src\\main\\haxe\\stx\\Compose.hx"
			],
			[
				"call",
				"tink\\src\\tink\\core\\Callback.hx"
			],
			[
				"futur",
				"tink\\src\\tink\\core\\Future.hx"
			],
			[
				"cs.",
				"pointwise\\hxml\\test\\cs.hxml"
			],
			[
				"funct",
				"pointwise\\src\\main\\haxe\\stx\\Functions.hx"
			],
			[
				"ne",
				"pointwise\\hxml\\test\\neko.hxml"
			],
			[
				"cod",
				"pointwise\\src\\main\\haxe\\stx\\Codeblock.hx"
			],
			[
				"func",
				"pointwise\\src\\main\\haxe\\stx\\Functions.hx"
			],
			[
				"la",
				"tink\\src\\tink\\core\\Lazy.hx"
			],
			[
				"pair",
				"tink\\src\\tink\\core\\Pair.hx"
			],
			[
				"eerror",
				"tink\\src\\tink\\core\\Error.hx"
			],
			[
				"lazy",
				"tink\\src\\tink\\core\\Lazy.hx"
			],
			[
				"neko.",
				"stax\\build\\boot\\neko.hxml"
			],
			[
				"future",
				"stax\\src\\main\\haxe\\stx\\async\\Future.hx"
			],
			[
				"strings",
				"stax\\src\\main\\haxe\\stx\\Strings.hx"
			],
			[
				"arrays.hx",
				"stax\\src\\main\\haxe\\stx\\Arrays.hx"
			],
			[
				"subs",
				"stax\\src\\main\\haxe\\stx\\async\\Subscription.hx"
			],
			[
				"baseo",
				"stax\\src\\main\\haxe\\stx\\reactive\\observable\\BaseObservable.hx"
			],
			[
				"waitin",
				"stax\\src\\main\\haxe\\stx\\async\\ifs\\Waiting.hx"
			],
			[
				"iobserva",
				"stax\\src\\main\\haxe\\stx\\reactive\\ifs\\Observable.hx"
			],
			[
				"stax",
				"stax\\src\\main\\haxe\\Stax.hx"
			],
			[
				"task",
				"stax\\src\\main\\haxe\\hx\\scheduler\\Task.hx"
			],
			[
				"settest",
				"stax\\src\\test\\haxe\\stx\\ds\\SetTest.hx"
			],
			[
				"threadsc",
				"stax\\src\\main\\haxe\\hx\\scheduler\\ThreadScheduler.hx"
			],
			[
				"threads",
				"stax\\src\\main\\haxe\\hx\\scheduler\\ThreadScheduler.hx"
			],
			[
				"sched",
				"stax\\src\\main\\haxe\\hx\\ifs\\Scheduler.hx"
			],
			[
				"test.hx",
				"stax\\src\\test\\haxe\\Test.hx"
			],
			[
				"sch",
				"stax\\src\\main\\haxe\\hx\\ifs\\Scheduler.hx"
			],
			[
				"neko/std",
				"std\\neko\\_std\\Std.hx"
			],
			[
				"",
				"stax\\src\\test\\haxe\\stx\\ds\\SetTest.hx"
			],
			[
				"sette",
				"stax\\src\\test\\haxe\\stx\\ds\\SetTest.hx"
			],
			[
				"hx/timer",
				"stax\\src\\main\\haxe\\hx\\Timer.hx"
			],
			[
				"sche",
				"stax\\src\\main\\haxe\\hx\\ifs\\Scheduler.hx"
			],
			[
				"itask",
				"stax\\src\\main\\haxe\\hx\\ifs\\Task.hx"
			],
			[
				"defaultta",
				"stax\\src\\main\\haxe\\hx\\scheduler\\task\\DefaultTask.hx"
			],
			[
				"arrowlettas",
				"stax\\src\\main\\haxe\\hx\\scheduler\\task\\ArrowletTask.hx"
			],
			[
				"defaultt",
				"stax\\src\\main\\haxe\\hx\\scheduler\\task\\DefaultTask.hx"
			],
			[
				"wait",
				"stax\\src\\main\\haxe\\stx\\async\\ifs\\Waiting.hx"
			],
			[
				"ifobservabl",
				"stax\\src\\main\\haxe\\stx\\reactive\\ifs\\Observable.hx"
			],
			[
				"test.",
				"stax\\src\\test\\haxe\\Test.hx"
			],
			[
				"taskt",
				"stax\\src\\test\\haxe\\hx\\scheduler\\TaskTest.hx"
			],
			[
				"ifrun",
				"stax\\src\\main\\haxe\\hx\\ifs\\Run.hx"
			],
			[
				"scheduler",
				"stax\\src\\main\\haxe\\hx\\ifs\\Scheduler.hx"
			],
			[
				"sett",
				"stax\\src\\test\\haxe\\stx\\ds\\SetTest.hx"
			],
			[
				"bottes",
				"stax\\src\\test\\haxe\\stx\\ces\\BotTest.hx"
			],
			[
				"arrowlett",
				"stax\\src\\boot\\haxe\\stx\\async\\ArrowletTest.hx"
			],
			[
				"future.",
				"tinkerbell\\src\\tink\\core\\types\\Future.hx"
			],
			[
				"hxtimer",
				"stax\\src\\main\\haxe\\hx\\Timer.hx"
			],
			[
				"deq",
				"std\\neko\\vm\\Deque.hx"
			],
			[
				"deque",
				"std\\cpp\\vm\\Deque.hx"
			],
			[
				"unitt",
				"stax\\src\\main\\haxe\\stx\\UnitTest.hx"
			],
			[
				"servert",
				"stax\\src\\test\\haxe\\bot\\io\\net\\ServerTest.hx"
			],
			[
				"unitte",
				"stax\\src\\main\\haxe\\stx\\UnitTest.hx"
			],
			[
				"testr",
				"stax\\src\\main\\haxe\\stx\\test\\TestRig.hx"
			],
			[
				"eventu",
				"stax\\src\\main\\haxe\\stx\\async\\Eventual.hx"
			],
			[
				"basesc",
				"stax\\src\\main\\haxe\\hx\\scheduler\\BaseScheduler.hx"
			],
			[
				"bases",
				"stax\\src\\main\\haxe\\hx\\scheduler\\BaseScheduler.hx"
			],
			[
				"scheu",
				"stax\\src\\main\\haxe\\hx\\ifs\\Scheduler.hx"
			],
			[
				"http.",
				"std\\haxe\\Http.hx"
			],
			[
				"impleventual",
				"stax\\src\\main\\haxe\\stx\\async\\impl\\Eventual.hx"
			],
			[
				"eventual",
				"stax\\src\\main\\haxe\\stx\\async\\Eventual.hx"
			],
			[
				"ceventual",
				"stax\\src\\main\\haxe\\stx\\async\\Eventual"
			],
			[
				"hub",
				"stax\\src\\main\\haxe\\bot\\Hub.hx"
			],
			[
				"injector",
				"stax\\src\\main\\haxe\\stx\\ioc\\Injector.hx"
			],
			[
				"ioct",
				"stax\\src\\test\\haxe\\stx\\ioc\\IocTest.hx"
			],
			[
				"prelu",
				"stax\\src\\main\\haxe\\Prelude.hx"
			],
			[
				"orderedh",
				"stax\\src\\main\\haxe\\hx\\ds\\OrderedHashMap.hx"
			],
			[
				"assert",
				"stax\\src\\main\\haxe\\stx\\test\\Assert.hx"
			],
			[
				"php.",
				"stax\\build\\test\\php.hxml"
			],
			[
				"cpp",
				"stax\\build\\test\\cpp.hxml"
			],
			[
				"ordered",
				"stax\\src\\main\\haxe\\hx\\ds\\OrderedMap.hx"
			],
			[
				"ioc",
				"stax\\src\\test\\haxe\\stx\\ioc\\IocTest.hx"
			],
			[
				"hasher",
				"stax\\src\\main\\haxe\\stx\\Hasher.hx"
			],
			[
				"hashtest",
				"stax\\src\\test\\haxe\\stx\\HashTest.hx"
			],
			[
				"contractt",
				"stax\\src\\test\\haxe\\stx\\ContractTest.hx"
			],
			[
				"lazyl",
				"stax\\src\\main\\haxe\\stx\\ds\\LazyList.hx"
			],
			[
				"lazylist",
				"stax\\src\\test\\haxe\\stx\\ds\\LazyListTest.hx"
			],
			[
				"lazylistt",
				"stax\\src\\test\\haxe\\stx\\ds\\LazyListTest"
			],
			[
				"tuplet",
				"stax\\src\\test\\haxe\\stx\\TupleTest.hx"
			],
			[
				"show",
				"stax\\src\\main\\haxe\\stx\\Show.hx"
			],
			[
				"showt",
				"stax\\src\\test\\haxe\\stx\\ShowTest.hx"
			],
			[
				"orderte",
				"stax\\src\\test\\haxe\\stx\\OrderTest.hx"
			],
			[
				"order",
				"stax\\src\\main\\haxe\\stx\\Order.hx"
			],
			[
				"tables",
				"stax\\src\\main\\haxe\\stx\\Tables.hx"
			],
			[
				"reflects",
				"stax\\src\\main\\haxe\\stx\\Reflects.hx"
			],
			[
				"objects",
				"stax\\src\\main\\haxe\\stx\\Objects.hx"
			],
			[
				"objectt",
				"stax\\src\\test\\haxe\\stx\\ObjectsTest.hx"
			],
			[
				"equ",
				"stax\\src\\test\\haxe\\stx\\EqualTest.hx"
			],
			[
				"equalt",
				"stax\\src\\test\\haxe\\stx\\EqualTest.hx"
			],
			[
				"equal.",
				"stax\\src\\main\\haxe\\stx\\Equal.hx"
			],
			[
				"fail",
				"stax\\src\\main\\haxe\\stx\\Fail.hx"
			],
			[
				"prelude",
				"stax\\src\\main\\haxe\\Prelude.hx"
			],
			[
				"testri",
				"stax\\src\\main\\haxe\\stx\\test\\TestRig.hx"
			],
			[
				"testc",
				"stax\\src\\main\\haxe\\stx\\test\\TestConstruct.hx"
			],
			[
				"test.h",
				"stax\\src\\test\\haxe\\Test.hx"
			],
			[
				"testconstru",
				"stax\\src\\main\\haxe\\stx\\test\\TestConstruct.hx"
			],
			[
				"testcon",
				"stax\\src\\main\\haxe\\stx\\test\\TestConstruct.hx"
			],
			[
				"cest",
				"stax\\src\\test\\haxe\\stx\\ces\\CESTest.hx"
			],
			[
				"cranktes",
				"stax\\src\\test\\haxe\\stx\\async\\arrowlet\\CrankTest.hx"
			],
			[
				"test/test.hx",
				"stax\\src\\test\\haxe\\Test.hx"
			],
			[
				"bootnode",
				"stax\\build\\boot\\nodejs.hxml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/prj/haxe/streams/streams.sublime-project"
			],
			[
				"addd",
				"~/prj/haxe/addendum/addendum.sublime-project"
			],
			[
				"add",
				"~/prj/haxe/addendum/addendum.sublime-project"
			],
			[
				"arr",
				"~/prj/haxe/arrowlets/arrowlets.sublime-project"
			],
			[
				"arro",
				"~/prj/haxe/arrowlets/arrowlets.sublime-project"
			],
			[
				"a",
				"C:\\world\\prj\\haxe\\addendum\\addendum.sublime-project"
			],
			[
				"ad",
				"C:\\world\\prj\\haxe\\addendum\\addendum.sublime-project"
			],
			[
				"prj_",
				"C:\\world\\prj\\haxe\\prj_haxe.sublime-project"
			],
			[
				"modu",
				"C:\\world\\prj\\haxe\\module\\module.sublime-project"
			],
			[
				"bot",
				"C:\\world\\prj\\haxe\\bot\\bot.sublime-project"
			],
			[
				"clini",
				"C:\\world\\prj\\clinic\\clinic.sublime-project"
			],
			[
				"qui",
				"C:\\world\\prj\\haxe\\quiver\\quiver.sublime-project"
			],
			[
				"e",
				"C:\\world\\prj\\haxe\\e8\\e8.sublime-project"
			],
			[
				"asy",
				"C:\\world\\prj\\haxe\\async\\async.sublime-project"
			],
			[
				"as",
				"C:\\world\\prj\\haxe\\async\\async.sublime-project"
			],
			[
				"st",
				"C:\\world\\prj\\haxe\\stax\\stax.sublime-project"
			],
			[
				"lib",
				"C:\\world\\prj\\haxe\\lib\\hx_lib.sublime-project"
			],
			[
				"libe",
				"C:\\world\\prj\\neko\\neko-libevent\\neko-libevent.sublime-project"
			],
			[
				"ffi",
				"C:\\world\\prj\\haxe\\hxffi\\hxffi.sublime-project"
			],
			[
				"hx_l",
				"C:\\world\\prj\\haxe\\lib\\hx_lib.sublime-project"
			],
			[
				"cli",
				"C:\\world\\stack\\prj\\clinic\\clinica\\clinica.sublime-project"
			],
			[
				"yan",
				"C:\\world\\stack\\prj\\haxe\\yana\\yana.sublime-project"
			],
			[
				"tar",
				"C:\\world\\stack\\prj\\go\\tardisgo\\tardis.sublime-project"
			],
			[
				"tard",
				"C:\\world\\stack\\prj\\go\\tardisgo\\tardis.sublime-project"
			],
			[
				"sim",
				"C:\\world\\stack\\prj\\clinic\\simple_site\\simple_site.sublime-project"
			],
			[
				"has",
				"C:\\world\\stack\\prj\\haxe\\haxelib\\haxelib.sublime-project"
			],
			[
				"c",
				"C:\\world\\stack\\prj\\clinic\\clinic.sublime-project"
			],
			[
				"dr",
				"C:\\world\\stack\\prj\\haxe\\draw\\draw.sublime-project"
			],
			[
				"h",
				"C:\\world\\stack\\prj\\haxe\\hx_node\\hx_node.sublime-project"
			],
			[
				"quiv",
				"C:\\world\\stack\\prj\\haxe\\quiver\\quiver.sublime-project"
			],
			[
				"haxe",
				"C:\\world\\stack\\prj\\haxe\\haxelib\\haxelib.sublime-project"
			],
			[
				"hax",
				"C:\\world\\stack\\prj\\haxe\\haxelib\\haxelib.sublime-project"
			],
			[
				"sc",
				"C:\\world\\stack\\prj\\haxe\\scuts\\scuts.sublime-project"
			],
			[
				"qu",
				"C:\\world\\stack\\prj\\haxe\\quiver\\quiver.sublime-project"
			],
			[
				"tro",
				"/C/world/stack/prj/haxe/arrow/src/main/haxe/reactive/arrow/blaze/troyworks.sublime-project"
			],
			[
				"hsm",
				"/C/world/stack/prj/haxe/hsm2/hsm2.sublime-project"
			],
			[
				"hs",
				"/C/world/stack/prj/haxe/hsm2/hsm2.sublime-project"
			],
			[
				"dra",
				"/C/world/stack/prj/haxe/draw/draw.sublime-project"
			],
			[
				"au",
				"/C/world/stack/prj/haxe/auth/auth.sublime-project"
			],
			[
				"hx_e",
				"/C/world/stack/prj/haxe/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"scu",
				"/C/world/stack/prj/haxe/scuts/scuts.sublime-project"
			],
			[
				"ya",
				"/C/world/stack/prj/haxe/yana/yana.sublime-project"
			],
			[
				"orb",
				"/C/world/stack/prj/haxe/orbit/orbit.sublime-project"
			],
			[
				"mu",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"hx_",
				"/C/world/stack/prj/haxe/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"quiver",
				"/C/world/stack/prj/haxe/quiver/quiver.sublime-project"
			],
			[
				"must",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"hx_node",
				"/C/world/stack/prj/haxe/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"Mu",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"QU",
				"/C/world/stack/prj/haxe/quiver/quiver.sublime-project"
			],
			[
				"M",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"qiu",
				"/C/world/stack/prj/haxe/quiver/quiver.sublime-project"
			],
			[
				"q",
				"/C/world/stack/prj/haxe/quiver/quiver.sublime-project"
			],
			[
				"Mus",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"Must",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"w",
				"/C/world/stack/prj/node/waltz/waltz.sublime-project"
			],
			[
				"tr",
				"/C/world/stack/prj/haxe/trait/traits4/traits4.sublime-project"
			],
			[
				"tin",
				"/C/world/stack/prj/haxe/tinkerbell/tinkerbell.sublime-project"
			],
			[
				"y",
				"/C/world/stack/prj/haxe/yana/yana.sublime-project"
			],
			[
				"m",
				"/C/world/stack/prj/haxe/muster/muster.sublime-project"
			],
			[
				"user",
				"/C/world/stack/prj/node/user/user.sublime-project"
			],
			[
				"us",
				"/C/world/stack/prj/node/user/user"
			],
			[
				"oauthn",
				"/C/world/stack/prj/node/oauthn/oauthn.sublime-project"
			],
			[
				"cm",
				"/G/home/dayz/php/cmf/cmf.sublime-project"
			],
			[
				"cmf",
				"/G/home/dayz/php/cmf/cmf.sublime-project"
			],
			[
				"o",
				"/G/home/dayz/php/oauth/oauth.sublime-project"
			],
			[
				"ou",
				"/G/home/dayz/php/oauth/oauth.sublime-project"
			],
			[
				"oa",
				"/G/home/dayz/php/oauth/oauth.sublime-project"
			],
			[
				"box",
				"/G/home/dayz/box.sublime-project"
			],
			[
				"sta",
				"/C/world/stack/prj/stax/stax.sublime-project"
			],
			[
				"funk",
				"/C/world/stack/prj/funk/funk.sublime-project"
			],
			[
				"quq",
				"/C/world/stack/prj/queue/queue.sublime-project"
			],
			[
				"hx_n",
				"/C/world/stack/prj/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"va",
				"/C/world/stack/prj/vanilla/src/test/haxe/vnl/scala-pipes.sublime-project"
			],
			[
				"van",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"vanl",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"v",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"fun",
				"/C/world/stack/prj/funk/funk.sublime-project"
			],
			[
				"que",
				"/C/world/stack/prj/queue/queue.sublime-project"
			],
			[
				"f",
				"/C/world/stack/prj/funk/funk.sublime-project"
			],
			[
				"sup	",
				"/C/world/stack/prj/super/super.sublime-project"
			],
			[
				"super",
				"/C/world/stack/prj/super/super.sublime-project"
			],
			[
				"libserv",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"th",
				"/C/world/stack/prj/wwx13/three_show/three_show.sublime-project"
			],
			[
				"ar",
				"/C/world/stack/prj/arw2/arw2.sublime-project"
			],
			[
				"pl",
				"/C/world/stack/prj/test/stx_plus_test/stx_plus_test.sublime-project"
			],
			[
				"thre",
				"/C/world/stack/prj/wwx13/three_show/three_show.sublime-project"
			],
			[
				"wa",
				"/C/world/stack/prj/walkabout/walkabout.sublime-project"
			],
			[
				"wal",
				"/C/world/stack/prj/walkabout/walkabout.sublime-project"
			],
			[
				"Van",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"vna",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"use",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"it",
				"/C/world/stack/prj/iteratee/iteratee.sublime-project"
			],
			[
				"u",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"ab",
				"/C/world/stack/prj/abstracttypes/abstracttypes.sublime-project"
			],
			[
				"abs",
				"/C/world/stack/prj/abstracttypes/abstracttypes.sublime-project"
			],
			[
				"abstr",
				"/C/world/stack/prj/abstracttypes/abstracttypes.sublime-project"
			],
			[
				"pop",
				"/C/world/stack/prj/popcorn/popcorn.sublime-project"
			],
			[
				"popco",
				"/C/world/stack/prj/popcorn/popcorn.sublime-project"
			],
			[
				"p",
				"/C/world/stack/prj/push/push.sublime-project"
			],
			[
				"stx.w",
				"/C/world/stack/prj/stax.wiki/stax.wiki.sublime-project"
			],
			[
				"stax.w",
				"/C/world/stack/prj/stax.wiki/stax.wiki.sublime-project"
			],
			[
				"Vani",
				"/C/world/stack/prj/Vanilla/vanilla.sublime-project"
			],
			[
				"hxun",
				"/C/world/stack/prj/hxunit/hxunit.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 656.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
